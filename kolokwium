
#Zadanie 1
def bezpowtorzen(n):
    print(set(n))


#Zadanie 2
string = "chuj ci w dupee>"
string="".join(filter(str.isalpha,string))
for i in range(3,len(string),4):
    print(string[i],end =" ")

print()
#Zadanie 3
def fibo(n):
    if n<=1 : return n

    else:
        return fibo(n - 1) + fibo(n - 2)
print(fibo(10))

def fibo2(n):
    wynik=0
    for i in range(1, n + 1):
        wynik = wynik + i
    return wynik
print(fibo2(10))

#Zadanie 4
def potega(list,n):
    res=1
    for i in list:
        res=res*(i**n)
    return res

lista = [2,2,3,5]
print(potega(lista,n=2))

#Zadanie 5
owoce = ['apple', 'banana', 'pomergranate', 'plum', 'orange', 'melon', 'cherry', 'watermelon']
noweowoce = [x for x in owoce if "u" in x or "o" in x]
print(noweowoce)

#Zadanie 6
def newton(n,k):
    licznik=1
    for i in range (1,n+1):
        licznik=licznik*i

    mianownik=1
    for i in range(1,k+1):
        mianownik=mianownik*i

    for i in range(1,n-k+1):
        mianownik=mianownik*i
    return licznik/mianownik
print(newton(5,2))


class Account:

    def __init__(self,number,balance=0):
        self.number = number
        self.balance = balance

    def __str__(self):
        return f"Numer konta: {self.number} Account balance {str(self.balance)} "

    def transfer(self,account,amount):


        self.balance -= amount
        account.balance += amount
        print( f"Przelew z konta {self.number} na konto {account.number} został wykonany. Kwota przelena {amount} usd")

    def pay(self,amount):
        self.balance -= amount
        print(f"Konto {self.number} wypłacił {amount}")
    def get(self,amount):
        self.balance += amount
        print(f"Konto {self.number} wpłacił {amount}")

account1 = Account("6006",42000)
account2 = Account("420",100)

account1.transfer(account2,100)
account1.pay(10000)
account1.get(420)
print(account1)
print(account2)

